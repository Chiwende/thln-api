version: '3.8'

services:
  # Go application
  app:
    build: .
    ports:
      - '9080:9080'
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=p@$$w0rD
      - DB_NAME=thln
      - DB_SSLMODE=disable
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - thln-network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=thln
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '6001:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d thln']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thln-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@thln.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #   ports:
  #     - '8081:80'
  #   depends_on:
  #     - postgres
  #   networks:
  #     - thln-network
  #   restart: unless-stopped

volumes:
  postgres_data:

networks:
  thln-network:
    driver: bridge
