version: '3.8'

services:
  # Go application
  app:
    build: .
    ports:
      - '9080:9080'
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=p@$$w0rD
      - DB_NAME=thln
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - thln-network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=thln
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d thln']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thln-network
    restart: unless-stopped

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - thln-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@thln.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - '8080:80'
    depends_on:
      - postgres
    networks:
      - thln-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  thln-network:
    driver: bridge
